{"version":3,"file":"static/js/43.7cccf144.chunk.js","mappings":"oLAAaA,EAAW,CACpB,CACIC,MAAM,+EACNC,OAAQ,yBACRC,YACI,mFACJC,KAAM,YAEV,CACIH,MAAM,0EACNC,OAAQ,wBACRC,YACI,4FACJC,KAAM,YAEV,CACIH,MAAM,oGACNC,OAAQ,wBACRC,YACI,4FACJC,KAAM,YAEV,CACIH,MAAM,+EACNC,OAAQ,wBACRC,YACI,4FACJC,KAAM,YAEV,CACIH,MAAM,+EACNC,OAAQ,wBACRC,YACI,4FACJC,KAAM,YAEV,CACIH,MAAM,+CACNC,OAAQ,wBACRC,YACI,4FACJC,KAAM,YAEV,CACIH,MAAM,kDACNC,OAAQ,uBACRC,YACI,iFACJC,KAAM,YAEV,CACIH,MAAM,0EACNC,OAAQ,wBACRC,YACI,4FACJC,KAAM,YAEV,CACIH,MAAM,0EACNC,OAAQ,wBACRC,YACI,4FACJC,KAAM,YAEV,CACIH,MAAM,+CACNC,OAAQ,wBACRC,YACI,4FACJC,KAAM,YAEV,CACIH,MAAM,0EACNC,OAAQ,wBACRC,YACI,4FACJC,KAAM,YAEV,CACIH,MAAM,0EACNC,OAAQ,wBACRC,YACI,4FACJC,KAAM,aC/ERC,EAAsB,CACxB,CACIC,IAAK,EACLC,MAAO,gBACPC,SAAU,YAEd,CACIF,IAAK,EACLC,MAAO,gBACPC,SAAU,aAKLC,EAAW,CACpBC,EAAAA,KAAAA,IAAS,gBAAgB,SAACC,EAAKC,EAAKC,GACjCC,QAAQC,IAAIJ,EAAIK,OAClB,IAEDN,EAAAA,KAAAA,IAAS,YAAY,SAACC,EAAKC,EAAKC,GAC5B,OAAOD,EAAIC,EAAII,OAAO,KAAMJ,EAAIK,KAAKlB,GACxC,IAEDU,EAAAA,KAAAA,KAAU,UAAU,SAACC,EAAKC,EAAKC,GAC3B,MAAsCF,EAAIQ,KAAnCZ,EAAP,EAAOA,MAAOC,EAAd,EAAcA,SAGd,OADmBH,EAAMe,QAAO,SAACC,GAAD,OAAOA,EAAEd,QAAUA,CAAnB,IAChBe,OAEMjB,EAAMe,QAAO,SAACC,GAAD,OAAOA,EAAEb,WAAaA,CAAtB,IAChBc,OAGZV,EAAIC,EAAII,OAAO,KAAMJ,EAAIK,KAAK,CAACX,MAAOA,KAFlCK,EAAIC,EAAII,OAAO,KAAMJ,EAAIK,KAAK,mEAJVN,EAAIC,EAAII,OAAO,KAAMJ,EAAIK,KAAK,yGAOhE,IAEDR,EAAAA,KAAAA,KAAU,aAAa,SAACC,EAAKC,EAAKC,GAC9B,MAAsCF,EAAIQ,KAAnCZ,EAAP,EAAOA,MAAOC,EAAd,EAAcA,SAEd,GADmBH,EAAMe,QAAO,SAACC,GAAD,OAAOA,EAAEd,QAAUA,CAAnB,IAChBe,OAAQ,OAAOV,EAAIC,EAAII,OAAO,KAAMJ,EAAIK,KAAK,4FAE7D,IAAMK,EAASC,OAAOnB,EAAMA,EAAMiB,OAAQ,GAAGhB,KAAO,EAOpD,OANAD,EAAMoB,KAAK,CACPnB,IAAKiB,EACLhB,MAAOA,EACPC,SAAUA,IAGPI,EAAIC,EAAII,OAAO,KAAMJ,EAAIK,KAAK,CAACX,MAAOA,IAChD,IAGDG,EAAAA,KAAAA,IAAS,SAAS,SAACC,EAAIC,EAAIC,GACvB,OAAOD,EAAIC,EAAII,OAAO,KAAMJ,EAAIK,KAAKb,GACxC,KCvDQqB,EAAyBC,EAAAA,YAAAA,WAAA,UAAelB,G","sources":["mock/product.ts","mock/handler.ts","mock/worker.ts"],"sourcesContent":["export const products = [\n    {\n        image:'https://i.pinimg.com/originals/36/22/d0/3622d06912fca8a187d4bedc4b2e6dfe.png',\n        header: 'Project Report - April',\n        description:\n            'Leverage agile frameworks to provide a robust synopsis for high level overviews.',\n        meta: 'ROI: 30%',\n    },\n    {\n        image:'https://i.pinimg.com/564x/ef/37/81/ef37815019ae52354c7c5772f4e886d6.jpg',\n        header: 'Project Report - June',\n        description:\n            'Capitalise on low hanging fruit to identify a ballpark value added activity to beta test.',\n        meta: 'ROI: 27%',\n    },\n    {\n        image:'https://p4.wallpaperbetter.com/wallpaper/743/153/113/fire-4k-hd-full-screen-wallpaper-preview.jpg',\n        header: 'Project Report - June',\n        description:\n            'Capitalise on low hanging fruit to identify a ballpark value added activity to beta test.',\n        meta: 'ROI: 27%',\n    },\n    {\n        image:'https://i.pinimg.com/originals/2a/75/45/2a75454caa253aa9d8ebb81b9b816b84.jpg',\n        header: 'Project Report - June',\n        description:\n            'Capitalise on low hanging fruit to identify a ballpark value added activity to beta test.',\n        meta: 'ROI: 27%',\n    },\n    {\n        image:'https://i.pinimg.com/originals/20/50/3d/20503de4f96ace6f1ff06e61a4540c13.png',\n        header: 'Project Report - June',\n        description:\n            'Capitalise on low hanging fruit to identify a ballpark value added activity to beta test.',\n        meta: 'ROI: 27%',\n    },\n    {\n        image:'https://wallpaperaccess.com/full/6730119.jpg',\n        header: 'Project Report - June',\n        description:\n            'Capitalise on low hanging fruit to identify a ballpark value added activity to beta test.',\n        meta: 'ROI: 27%',\n    },\n    {\n        image:'https://images4.alphacoders.com/119/1195479.jpg',\n        header: 'Project Report - May',\n        description:\n            'Bring to the table win-win survival strategies to ensure proactive domination.',\n        meta: 'ROI: 34%',\n    },\n    {\n        image:'https://i.pinimg.com/564x/a4/b4/51/a4b45174748c4803123c5a21294ee8c4.jpg',\n        header: 'Project Report - June',\n        description:\n            'Capitalise on low hanging fruit to identify a ballpark value added activity to beta test.',\n        meta: 'ROI: 27%',\n    },\n    {\n        image:'https://i.pinimg.com/564x/ab/85/bf/ab85bffa87c5a40419b7e03f0ec7b8e0.jpg',\n        header: 'Project Report - June',\n        description:\n            'Capitalise on low hanging fruit to identify a ballpark value added activity to beta test.',\n        meta: 'ROI: 27%',\n    },\n    {\n        image:'https://wallpaperaccess.com/full/2279213.png',\n        header: 'Project Report - June',\n        description:\n            'Capitalise on low hanging fruit to identify a ballpark value added activity to beta test.',\n        meta: 'ROI: 27%',\n    },\n    {\n        image:'https://i.pinimg.com/564x/85/df/aa/85dfaa9e5b349d6c42ef03c80927854b.jpg',\n        header: 'Project Report - June',\n        description:\n            'Capitalise on low hanging fruit to identify a ballpark value added activity to beta test.',\n        meta: 'ROI: 27%',\n    },\n    {\n        image:'https://i.pinimg.com/564x/27/10/21/27102108fdfb5f013bb829056cc18506.jpg',\n        header: 'Project Report - June',\n        description:\n            'Capitalise on low hanging fruit to identify a ballpark value added activity to beta test.',\n        meta: 'ROI: 27%',\n    },\n]","import {rest} from \"msw\";\nimport {MemberType} from \"@/types/member\";\nimport {products} from \"@/mock/product\";\n\nconst users = <MemberType[]>[\n    {\n        key: 0,\n        email: \"test@test.com\",\n        password: \"qwer1234\",\n    },\n    {\n        key: 1,\n        email: \"qwer@qwer.com\",\n        password: \"qwer1234\",\n    },\n];\n\n\nexport const handlers = [\n    rest.get('/product/:id', (req, res, ctx) => {\n       console.log(req.params)\n    }),\n\n    rest.get('/product', (req, res, ctx) => {\n        return res(ctx.status(200), ctx.json(products))\n    }),\n\n    rest.post(\"/login\", (req, res, ctx) => {\n        const {email, password} = <MemberType>req.body;\n\n        const checkEmail = users.filter((v) => v.email === email);\n        if (!checkEmail.length) return res(ctx.status(401), ctx.json(\"해당 이메일로 가입된 정보가 없습니다.\"));\n\n        const checkPassword = users.filter((v) => v.password === password);\n        if (!checkPassword.length)\n            return res(ctx.status(401), ctx.json(\"비밀번호가 틀렸습니다.\"));\n\n        return res(ctx.status(200), ctx.json({email: email}));\n    }),\n\n    rest.post('/register', (req, res, ctx) => {\n        const {email, password} = <MemberType>req.body;\n        const checkEmail = users.filter((v) => v.email !== email);\n        if(!!checkEmail.length) return res(ctx.status(201), ctx.json(\"이미 사용하고있는 이메일입니다.\"));\n\n        const newKey = Number(users[users.length -1].key) + 1;\n        users.push({\n            key: newKey,\n            email: email,\n            password: password\n        })\n\n        return res(ctx.status(200), ctx.json({email: email}));\n    }),\n\n\n    rest.get(\"/test\", (req,res,ctx) => {\n        return res(ctx.status(200), ctx.json(users))\n    })\n\n];\n","import { setupWorker, SetupWorkerApi } from 'msw';\nimport { handlers } from \"@/mock/handler\";\n\nexport const worker: SetupWorkerApi = setupWorker(...handlers);"],"names":["products","image","header","description","meta","users","key","email","password","handlers","rest","req","res","ctx","console","log","params","status","json","body","filter","v","length","newKey","Number","push","worker","setupWorker"],"sourceRoot":""}